{"version":3,"sources":["firebase.js","components/Place.js","components/PlacesList.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","Place","props","className","places","map","place","name","rating","id","PlacesList","state","user","handleChange","bind","handleSubmit","login","logout","event","this","setState","target","value","preventDefault","placesRef","database","ref","push","signInWithPopup","then","result","onAuthStateChanged","on","snapshot","val","newState","onClick","uid","onSubmit","type","placeholder","onChange","min","max","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d476097a.chunk.js","sourcesContent":["import firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAjk8weR51pIeGaT5Vmi6oRGCUnk-tRg14\",\n    authDomain: \"tbilicoffee.firebaseapp.com\",\n    databaseURL: \"https://tbilicoffee.firebaseio.com\",\n    projectId: \"tbilicoffee\",\n    storageBucket: \"tbilicoffee.appspot.com\",\n    messagingSenderId: \"693671842105\",\n    appId: \"1:693671842105:web:a28f54dc0f7411b9d418e8\"\n  };\n  \nfirebase.initializeApp(firebaseConfig);\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const auth = firebase.auth();\nexport default firebase;\n","import React from 'react';\n\nconst Place = (props) => {\n    return (\n    <div>\n        <section className='display-item'>\n                    <div className=\"wrapper\">\n                        <ul>\n                        {props.places.map((place) => {\n                            return (\n                            <li key={place.id}>\n                                <h3>{place.name}</h3>\n                                <p>rating: {place.rating}</p>\n                            </li>\n                            )\n                        })}\n                        </ul>\n                    </div>\n        </section>\n    </div>\n    )\n}\n\nexport default Place;","import React from 'react';\nimport firebase, { auth, provider } from '../firebase'\nimport Place from './Place';\n\nclass PlacesList extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            name: '',\n            rating: '',\n            places: [],\n            user: null\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.login = this.login.bind(this);\n        this.logout = this.logout.bind(this);\n    }\n\n    handleChange(event){\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        const  placesRef = firebase.database().ref('places');\n        const place = {\n            name: this.state.name,\n            rating: this.state.rating\n        }\n        placesRef.push(place);\n        this.setState({\n            name: '',\n            rating: ''\n        })\n    }\n\n    logout() {\n\n    }\n\n    login(){\n        auth.signInWithPopup(provider)\n        .then((result)=> {\n            const user = result.user;\n            this.setState({\n                user\n            })\n        })\n    }\n\n    componentDidMount(){\n        auth.onAuthStateChanged((user)=>{\n            if (user) {\n                this.setState({\n                    user\n                })\n            }\n        })\n        const placesRef = firebase.database().ref('places');\n        placesRef.on('value', (snapshot) => {\n            let places = snapshot.val();\n            let newState = [];\n            for (let place in places){\n                newState.push({\n                    id: place,\n                    name: places[place].name,\n                    rating: places[place].rating\n                })\n            }\n            this.setState({\n                places: newState\n            })\n        })\n    }\n\n    render() { \n        return (\n            <div>\n                <h2>Test</h2>\n                <div className=\"wrapper\">\n                    {this.state.user ?\n                        <div>\n                            <button onClick={this.logout}>Log Out</button>\n                            {(this.state.user.uid === 'SijEoyfdhUOZs4J1K45NwHvloL92') ? \n                                <section className=\"add-item\">\n                                <form onSubmit={this.handleSubmit}>\n                                    <input type=\"text\" name=\"name\" placeholder=\"What's the name of the place?\" onChange={this.handleChange} value={this.state.name} />\n                                    <input type=\"number\" name=\"rating\" placeholder=\"What is your rating?\" onChange={this.handleChange} value={this.state.rating} min='1' max='5'/>\n                                    <button>Add Item</button>\n                                </form>\n                            </section> : <div></div>}\n                            \n                        </div>                \n                        :\n                        <button onClick={this.login}>Log In</button>              \n                    }\n                </div>\n                <Place places={this.state.places}/>\n            </div>\n        )\n    }\n}\n\nexport default PlacesList;","import './App.css';\nimport PlacesList from './components/PlacesList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>TbiliCoffee</h1>\n      </header>\n      <PlacesList/>\n    <footer className=\"App-footer\">\n      <p>Created by ME</p>\n    </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}