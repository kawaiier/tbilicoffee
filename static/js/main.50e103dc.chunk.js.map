{"version":3,"sources":["components/Footer.js","components/Header.js","firebase.js","components/Login.js","components/Place.js","components/PlaceSubmit.js","components/PlacesList.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","href","Header","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","Login","props","user","onClick","logout","login","Place","myData","concat","places","sort","a","b","place","name","map","item","i","type","mapsLink","city","address","petFriendly","outdoorSeats","PlaceSubmit","onSubmit","handleSubmit","placeholder","onChange","handleChange","value","htmlFor","id","checked","PlacesList","state","rating","prices","espresso","americano","latte","isLoggedIn","bind","event","target","this","setState","preventDefault","placesRef","database","ref","push","signOut","then","signInWithPopup","result","onAuthStateChanged","on","snapshot","val","newState","process","uid","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAUeA,G,YARA,WACX,OACI,wBAAQC,UAAU,aAAlB,SACI,4CAAc,mBAAGC,KAAK,6BAAR,oCCMXC,EATA,WACX,OACI,yBAAQF,UAAU,aAAlB,UACI,6CACA,0E,+DCMZG,IAASC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,8CAIJ,IAAMC,EAAW,IAAIT,IAASU,KAAKC,mBAC7BD,EAAOV,IAASU,OACdV,IAAf,ECCeY,EAdD,SAACC,GACX,OACI,8BACKA,EAAMC,KACK,8BACI,wBAAQC,QAASF,EAAMG,OAAvB,uBAGJ,wBAAQD,QAASF,EAAMI,MAAvB,uBC+BTC,G,MArCD,SAACL,GAEX,IAEMM,EAAS,GAAGC,OAAOP,EAAMQ,QAS/B,OANIF,EAAOG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,MAAMC,KAAOF,EAAEC,MAAMC,KAAO,GAAK,KAO7D,8BACI,yBAAS7B,UAAU,eAAnB,SACY,qBAAKA,UAAU,UAAf,SAEIsB,EAAOQ,KAAI,SAACC,EAAMC,GAAP,OACX,sBAAahC,UAAU,aAAvB,UACA,6BAAK+B,EAAKH,MAAMK,OAChB,6BACCF,EAAKH,MAAMC,OAEZ,4BAAG,oBAAG5B,KAAM8B,EAAKH,MAAMM,SAApB,UAA+BH,EAAKH,MAAMO,KAA1C,KAAkDJ,EAAKH,MAAMQ,aAC/DL,EAAKH,MAAMS,YAAc,0DAAyB,6DAClDN,EAAKH,MAAMU,aAAe,iEAAgC,gEAPjDN,cCoBnBO,G,MAxCK,SAACvB,GAGjB,OACI,8BACI,kCACI,uBAAMwB,SAAUxB,EAAMyB,aAAczC,UAAU,WAA9C,UACI,uBAAOiC,KAAK,OAAOJ,KAAK,OAAOa,YAAY,gCAAgCC,SAAU3B,EAAM4B,aAAcC,MAAO7B,EAAMY,MAAMC,MAAQ,KACpI,0CACK,uBACD,yBAAQgB,MAAO7B,EAAMY,MAAMO,KAAMQ,SAAU3B,EAAM4B,aAAcf,KAAK,OAApE,UACI,wBAAQgB,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,2BAGR,uBAAOZ,KAAK,OAAOJ,KAAK,UAAUa,YAAY,mCAAmCC,SAAU3B,EAAM4B,aAAcC,MAAO7B,EAAMY,MAAMQ,SAAW,KAC7I,uBAAOH,KAAK,OAAOJ,KAAK,WAAWa,YAAY,gCAAgCC,SAAU3B,EAAM4B,aAAcC,MAAO7B,EAAMY,MAAMM,UAAY,KAC5I,gDACW,uBACP,yBAAQW,MAAO7B,EAAMY,MAAMK,KAAMU,SAAU3B,EAAM4B,aAAcf,KAAK,OAApE,UACI,wBAAQgB,MAAM,OAAd,kBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,QAAd,yBAGR,uBAAOC,QAAQ,MAAf,2BACA,uBAAOb,KAAK,WAAWc,GAAG,MAAMlB,KAAK,cAAcmB,QAAShC,EAAMY,MAAMS,YAAaM,SAAU3B,EAAM4B,eACrG,uBAAOE,QAAQ,UAAf,4BACA,uBAAOb,KAAK,WAAWc,GAAG,UAAUlB,KAAK,eAAemB,QAAShC,EAAMY,MAAMU,aAAcK,SAAU3B,EAAM4B,eAE3G,uDCqILK,E,kDAjKX,WAAYjC,GAAO,IAAD,8BACd,cAAMA,IACDkC,MAAQ,CACTtB,MAAO,CACHC,KAAM,GACNM,KAAM,GACNC,QAAS,GACTF,SAAU,GACVD,KAAK,GACLI,aAAa,EACbC,cAAc,EACda,OAAQ,GACRC,OAAQ,CACJC,SAAU,GACVC,UAAW,GACXC,MAAO,KAGf/B,OAAQ,GACRP,KAAM,KACNuC,YAAY,GAEhB,EAAKZ,aAAe,EAAKA,aAAaa,KAAlB,gBACpB,EAAKhB,aAAe,EAAKA,aAAagB,KAAlB,gBACpB,EAAKrC,MAAQ,EAAKA,MAAMqC,KAAX,gBACb,EAAKtC,OAAS,EAAKA,OAAOsC,KAAZ,gBAzBA,E,yDA4BLC,GACT,IAAMC,EAASD,EAAMC,OACfd,EAAwB,aAAhBc,EAAO1B,KAAsB0B,EAAOX,QAAUW,EAAOd,MAC7DhB,EAAO8B,EAAO9B,KAEpB+B,KAAKC,SACD,CACAjC,MAAK,2BACEgC,KAAKV,MAAMtB,OADb,kBAEAC,EAAOgB,MAKc,KAA1Be,KAAKV,MAAMtB,MAAMK,MACjB2B,KAAKC,SAAS,CACVjC,MAAK,2BACEgC,KAAKV,MAAMtB,OADb,IAEDK,KAAM,WAIY,KAA1B2B,KAAKV,MAAMtB,MAAMO,MACjByB,KAAKC,SAAS,CACVjC,MAAK,2BACEgC,KAAKV,MAAMtB,OADb,IAEDO,KAAM,gB,mCAMTuB,GACTA,EAAMI,iBACN,IAAMC,EAAY5D,EAAS6D,WAAWC,IAAI,UACpCrC,EAAQ,CACVC,KAAM+B,KAAKV,MAAMtB,MAAMC,KACvBM,KAAMyB,KAAKV,MAAMtB,MAAMO,KACvBC,QAASwB,KAAKV,MAAMtB,MAAMQ,QAC1BF,SAAU0B,KAAKV,MAAMtB,MAAMM,SAC3BD,KAAM2B,KAAKV,MAAMtB,MAAMK,KACvBI,YAAauB,KAAKV,MAAMtB,MAAMS,YAC9BC,aAAcsB,KAAKV,MAAMtB,MAAMU,aAC/Ba,OAAQS,KAAKV,MAAMtB,MAAMuB,QAEzBvB,EAAMC,MAAQD,EAAMQ,UACpB2B,EAAUG,KAAKtC,GACfgC,KAAKC,SACD,CACAjC,MAAO,CACHC,KAAM,GACNM,KAAM,GACNC,QAAS,GACTF,SAAU,GACVD,KAAK,GACLI,aAAa,EACbC,cAAc,EACda,OAAQ,S,+BAOd,IAAD,OACLtC,EAAKsD,UACJC,MAAK,WACF,EAAKP,SAAS,CACV5C,KAAM,Y,8BAKV,IAAD,OACHJ,EAAKwD,gBAAgBzD,GACpBwD,MAAK,SAACE,GACH,IAAMrD,EAAOqD,EAAOrD,KACpB,EAAK4C,SAAS,CACV5C,c,0CAKQ,IAAD,OACfJ,EAAK0D,oBAAmB,SAACtD,GACjBA,GACA,EAAK4C,SAAS,CACV5C,YAIMd,EAAS6D,WAAWC,IAAI,UAChCO,GAAG,SAAS,SAACC,GACnB,IAAIjD,EAASiD,EAASC,MAClBC,EAAW,GACf,IAAK,IAAI/C,KAASJ,EACdmD,EAAST,KAAK,CACVtC,MAAQ,CACJmB,GAAInB,EACJC,KAAML,EAAOI,GAAOC,KACpBM,KAAMX,EAAOI,GAAOO,KACpBC,QAASZ,EAAOI,GAAOQ,QACvBF,SAAUV,EAAOI,GAAOM,SACxBD,KAAMT,EAAOI,GAAOK,KACpBI,YAAab,EAAOI,GAAOS,YAC3BC,aAAcd,EAAOI,GAAOU,aAC5Ba,OAAQ3B,EAAOI,GAAOuB,UAIlC,EAAKU,SAAS,CACVrC,OAAQmD,S,+BAMhB,OACQ,sBAAK3E,UAAU,UAAf,UACI,cAAC,EAAD,CAAOiB,KAAM2C,KAAKV,MAAMjC,KAAMG,MAAOwC,KAAKxC,MAAOD,OAAQyC,KAAKzC,SAGzDyC,KAAKV,MAAMjC,MAAgC2D,iCAAxBhB,KAAKV,MAAMjC,KAAK4D,IACxB,cAAC,EAAD,CAAajD,MAAOgC,KAAKV,MAAMtB,MAAOgB,aAAcgB,KAAKhB,aAAcH,aAAcmB,KAAKnB,eAC1F,qEAGhB,cAAC,EAAD,CAAOjB,OAAQoC,KAAKV,MAAM1B,gB,GA5JrBsD,IAAMC,WCQhBC,MAVf,WACE,OACE,sBAAKhF,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCESiF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.50e103dc.chunk.js","sourcesContent":["import { React } from 'react';\n\nconst Footer = () => {\n    return (\n        <footer className=\"App-footer\">\n            <p>Created by <a href='https://kawaiier.github.io'>Sergey Manvelov</a></p>\n        </footer>\n    )\n}\n\nexport default Footer;","import { React } from 'react';\n\nconst Header = () => {\n    return (\n        <header className=\"App-header\">\n            <h1>TbiliCoffee</h1>\n            <p>The one and only Tbilisi coffee guide</p>\n        </header>\n    )\n}\n\nexport default Header;","import firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAjk8weR51pIeGaT5Vmi6oRGCUnk-tRg14\",\n    authDomain: \"tbilicoffee.firebaseapp.com\",\n    databaseURL: \"https://tbilicoffee.firebaseio.com\",\n    projectId: \"tbilicoffee\",\n    storageBucket: \"tbilicoffee.appspot.com\",\n    messagingSenderId: \"693671842105\",\n    appId: \"1:693671842105:web:a28f54dc0f7411b9d418e8\"\n  };\n  \nfirebase.initializeApp(firebaseConfig);\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const auth = firebase.auth();\nexport default firebase;\n","import React from 'react';\n\nconst Login = (props) => {\n    return (\n        <div>\n            {props.user ?\n                        <div>\n                            <button onClick={props.logout}>Log Out</button>\n                        </div>                \n                        :\n                        <button onClick={props.login}>Log In</button>              \n                    }\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react';\nimport './Place.css'\n// import Sort from './Sort';\n\nconst Place = (props) => {\n    \n    const sortDir = 'asc'\n\n    const myData = [].concat(props.places)\n    \n    if (sortDir === 'asc'){\n        myData.sort((a, b) => a.place.name > b.place.name ? 1 : -1)\n    } else {\n        myData.sort((a, b) => a.place.name < b.place.name ? 1 : -1)\n    }\n\n    \n    return (\n    <div>\n        <section className='display-item'>\n                    <div className=\"wrapper\">\n                    {\n                        myData.map((item, i) => \n                        <div key={i} className='singleItem'>\n                        <em>{item.place.type}</em>\n                        <h3>\n                        {item.place.name}\n                        </h3> \n                        <p><a href={item.place.mapsLink}>{item.place.city}, {item.place.address}</a></p>\n                        {item.place.petFriendly ? <p>Pet Friendly üê∂</p> : <p>No Pets Allowed üö´</p>}\n                        {item.place.outdoorSeats ? <p>You can sit outside ‚òÄÔ∏è</p> : <p>No seats outside ‚òÅÔ∏è</p>}\n                        {/* <p>Rating: {item.place.rating}</p>  */}\n                        </div>)\n                    }\n                    \n                    </div>\n        </section>\n    </div>\n    )\n}\n\nexport default Place;","import React from 'react';\nimport './PlaceList.css'\n\nconst PlaceSubmit = (props) => {\n    // console.log(props)\n    // console.log(props.place)\n    return (\n        <div>\n            <section >\n                <form onSubmit={props.handleSubmit} className=\"add-item\">\n                    <input type=\"text\" name=\"name\" placeholder=\"What's the name of the place?\" onChange={props.handleChange} value={props.place.name || ''} />\n                    <label>\n                    City <br/>\n                        <select value={props.place.city} onChange={props.handleChange} name='city'>\n                            <option value=\"Tbilisi\">Tbilisi</option>\n                            <option value=\"Batumi\">Batumi</option>\n                            <option value=\"Telavi\">Telavi</option>\n                            <option value=\"Rustavi\">Rustavi</option>\n                        </select>\n                    </label>\n                    <input type=\"text\" name=\"address\" placeholder=\"What's the address of the place?\" onChange={props.handleChange} value={props.place.address || ''} />\n                    <input type=\"text\" name=\"mapsLink\" placeholder=\"What's the link of the place?\" onChange={props.handleChange} value={props.place.mapsLink || ''} />\n                    <label>\n                    Place Type <br/>\n                        <select value={props.place.type} onChange={props.handleChange} name='type'>\n                            <option value=\"cafe\">Cafe</option>\n                            <option value=\"restaurant\">Restaurant</option>\n                            <option value=\"bar\">Bar</option>\n                            <option value=\"other\">Other</option>\n                        </select>\n                    </label>\n                    <label htmlFor=\"pet\"> Pet Friendly</label>\n                    <input type=\"checkbox\" id=\"pet\" name=\"petFriendly\" checked={props.place.petFriendly} onChange={props.handleChange} />\n                    <label htmlFor=\"outdoor\"> Outdoor Seats</label>\n                    <input type=\"checkbox\" id=\"outdoor\" name=\"outdoorSeats\" checked={props.place.outdoorSeats} onChange={props.handleChange} />\n                    {/* <input type=\"number\" name=\"rating\" placeholder=\"What is your rating?\" onChange={props.handleChange} value={props.place.rating || ''} min='1' max='5'/> */}\n                    <button>Add Item</button>\n                </form>\n            </section>\n        </div>\n    )\n}\n\nexport default PlaceSubmit;","import React from 'react';\nimport firebase, { auth, provider } from '../firebase'\nimport Login from './Login';\nimport Place from './Place';\nimport './PlaceList.css'\nimport PlaceSubmit from './PlaceSubmit';\n\nclass PlacesList extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            place: {\n                name: '',\n                city: '',\n                address: '',\n                mapsLink: '',\n                type:'',\n                petFriendly: false,\n                outdoorSeats: false,\n                rating: '',\n                prices: {\n                    espresso: '',\n                    americano: '',\n                    latte: ''\n                }\n            },\n            places: [],\n            user: null,\n            isLoggedIn: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.login = this.login.bind(this);\n        this.logout = this.logout.bind(this);\n    }\n\n    handleChange(event){\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        this.setState(\n            {\n            place : {\n                ...this.state.place,\n                [name]: value,\n            }\n            })\n        // console.log(name)\n        // console.log(value)\n        if (this.state.place.type === ''){\n            this.setState({\n                place : {\n                    ...this.state.place,\n                    type: 'cafe'\n                }\n            })\n        }\n        if (this.state.place.city === ''){\n            this.setState({\n                place : {\n                    ...this.state.place,\n                    city: 'Tbilisi'\n                }\n            })\n        }\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        const placesRef = firebase.database().ref('places');\n        const place = {\n            name: this.state.place.name,\n            city: this.state.place.city,\n            address: this.state.place.address,\n            mapsLink: this.state.place.mapsLink,\n            type: this.state.place.type,\n            petFriendly: this.state.place.petFriendly,\n            outdoorSeats: this.state.place.outdoorSeats,\n            rating: this.state.place.rating\n        }\n        if (place.name && place.address){\n            placesRef.push(place);\n            this.setState( \n                {\n                place: {\n                    name: '',\n                    city: '',\n                    address: '',\n                    mapsLink: '',\n                    type:'',\n                    petFriendly: false,\n                    outdoorSeats: false, \n                    rating: ''\n                }\n            }\n            )\n        }\n    }\n\n    logout() {\n        auth.signOut()\n        .then(() => {\n            this.setState({\n                user: null\n            });\n        });\n    }\n\n    login(){\n        auth.signInWithPopup(provider)\n        .then((result)=> {\n            const user = result.user;\n            this.setState({\n                user\n            })\n        })\n    }\n\n    componentDidMount(){\n        auth.onAuthStateChanged((user)=>{\n            if (user) {\n                this.setState({\n                    user\n                })\n            }\n        })\n        const placesRef = firebase.database().ref('places');\n        placesRef.on('value', (snapshot) => {\n            let places = snapshot.val();\n            let newState = [];\n            for (let place in places){\n                newState.push({\n                    place : {\n                        id: place,\n                        name: places[place].name,\n                        city: places[place].city,\n                        address: places[place].address,\n                        mapsLink: places[place].mapsLink,\n                        type: places[place].type,\n                        petFriendly: places[place].petFriendly,\n                        outdoorSeats: places[place].outdoorSeats,\n                        rating: places[place].rating\n                    }\n                })\n            }\n            this.setState({\n                places: newState\n            })\n        })\n    }\n\n    render() { \n        return (\n                <div className=\"wrapper\">\n                    <Login user={this.state.user} login={this.login} logout={this.logout}/>\n                    \n                    {\n                        (this.state.user && this.state.user.uid === process.env.REACT_APP_USER_ID) ? \n                                    <PlaceSubmit place={this.state.place} handleChange={this.handleChange} handleSubmit={this.handleSubmit}/> :\n                                    <div>Write @kawaiier to add more places</div>\n                                    }\n                    \n                    <Place places={this.state.places}/>\n                </div>\n        )\n    }\n}\n\nexport default PlacesList;","import './App.css';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport PlacesList from './components/PlacesList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <PlacesList/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}